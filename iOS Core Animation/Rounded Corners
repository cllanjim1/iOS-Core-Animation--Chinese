# 圆角
iOS系统中，最具特色美学之一的就是*圆角*（圆角矩形）。
这些在iOS中随处可见，例如主界面的图标，通知，文本输入框。考虑到它们如此流行，你也许会想会有一个简单的方法通过Photoshop来创建。我想你是对的。

```CALayer``` 的```cornerRadius```属性是控制图层角落的弯曲程度。它是一个浮点值，默认为0（0为直角），但是能够设置一些你喜欢的值（指定这个点）。默认情况下,这个弯曲度影响的背景颜色层,而不是内置图像或子图层。无论如何，当```masksToBounds```设置为```YES```时（见第二章），图层内的一切都会被这条曲线裁剪。

我们可通过一个简单的工程来证明这个。让我们设置几个视图在它们的父视图之外（如图 4.1）.你不能看见视图里面的超出部分，因为视图构建器总是裁剪视图。你只需要知道它们存在就好。

![alt text](https://raw.githubusercontent.com/hhgz9527/qipaname/master/Resource/4.1.png)
>两个较大的白色视图中，各自包含一个小的红色视图

通过代码，我们将设置20点的圆角半径，以及裁剪第二个视图（见示例 4.1）。从技术上讲，这些属性都可以直接应用界面构建器通过使用用户定义（User Defined Runtime Attributes）运行时属性和检查面板中的复选框，在但是在代码中是展示清晰的。图 4.2展示了结果。

**示例 4.1 应用```cornerRadius```和```masksToBounds```**

```
@interface ViewController ()

@property (nonatomic, weak) IBOutlet UIView *layerView1;
@property (nonatomic, weak) IBOutlet UIView *layerView2;

@end

@implementation ViewController

-(void)viewDidLoad {
    [super viewDidLoad];
    //set the corner radius on our layers
    self.layerView1.layer.cornerRadius = 20.0f;
    self.layerView2.layer.cornerRadius = 20.0f;
    //enable clipping on the second layer
    self.layerView2.layer.masksToBounds = YES;
}

@end
```
![alt text](https://raw.githubusercontent.com/hhgz9527/qipaname/master/Resource/4.2.png)
>右侧的红色子视图，是由父视图设置```cornerRadius```裁剪的

正如你所看到的，右侧的红色视图被父视图的角落弯曲所裁剪。

它不可能独立控制所有图层四角的弯曲率，若你想创建一个层或查看一些直角和圆角，那你需要寻找一个不同的方法，例如使用*图层蒙版*（在本章后面介绍）或```CAShapeLayer```（见第六章“图层详情”）


